[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "django-rest-project-template"
version = "0.1.0"
description = "Django REST template."
authors = [
    "Arthur Chang <arthurc0102@gmail.com>",
    "Billy Huang <10646003@ntub.edu.tw>",
]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
django = "5.0.6"
django-environ = "0.11.2"
django-extensions = "3.2.3"
django-split-settings = "1.3.1"
djangorestframework = "3.15.1"
drf-spectacular = "0.27.2"
psycopg = { extras = ["binary"], version = "3.1.18" }

[tool.poetry.group.dev.dependencies]
ipython = "8.24.0"
werkzeug = "3.0.3"
nplusone = "1.0.0"

[tool.poetry.group.lint.dependencies]
ruff = "0.4.3"
black = "24.4.2"
pyright = "1.1.362"
django-types = "0.19.1"
djangorestframework-types = "0.8.0"

[tool.poetry.group.test.dependencies]
pytest = "8.2.0"
pytest-django = "4.8.0"
nplusone = "1.0.0"


[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = [
  # pyflakes
  "F",
  # pycodestyle
  "E",
  "W",
  # pep8-naming
  "N",
  # pylint
  "PL",
  # mccabe
  "C90",
  # isort
  "I",
  # pydocstyle
  "D",
  # pyupgrade
  "UP",
  # flake8-builtins
  "A",
  # flake8-commas
  "COM",
  # flake8-bugbear
  "B",
  # flake8-comprehensions
  "C4",
  # flake8-type-checking
  "TCH",
  # flake8-datetimez
  "DTZ",
  # flake8-print
  "T20",
  # flake8-tidy-imports
  "TID",
  # flake8-simplify
  "SIM",
  # flake8-quotes
  "Q",
  # flake8-use-pathlib
  "PTH",
  # flake8-import-conventions
  "ICN",
  # flake8-django
  "DJ",
]
ignore = [
  # pydocstyle: Do not require any docstring
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "D212",
  "D203",
  # pydocstyle: Allow blank line after docstring
  "D202",
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-import-conventions]
banned-from = ["typing"]

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
typing = "t"


[tool.pyright]
pythonVersion = "3.11"
typeCheckingMode = "strict"
reportUnnecessaryTypeIgnoreComment = true
reportUnknownMemberType = false


[tool.pytest.ini_options]
addopts = "-vv"
python_files = ["tests.py", "test_*.py", "*_test.py"]
filterwarnings = ["error"]
